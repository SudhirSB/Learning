import { Answerable } from '../Answerable';
import { Interaction } from '../Interaction';
import { Question } from '../Question';
export declare type Adapter<OriginalType> = {
    [Field in keyof Omit<OriginalType, keyof Question<OriginalType>>]: OriginalType[Field] extends (...args: infer OriginalParameters) => infer OriginalMethodResult ? (...args: {
        [P in keyof OriginalParameters]: Answerable<OriginalParameters[P]>;
    }) => Question<Promise<Awaited<OriginalMethodResult>>> & Interaction & Adapter<Awaited<OriginalMethodResult>> : Question<Promise<Awaited<OriginalType[Field]>>> & Interaction & Adapter<Awaited<OriginalType[Field]>>;
};
